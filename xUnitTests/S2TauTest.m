classdef S2TauTest < matlab.unittest.TestCase
    
    properties (TestParameter)
        PathZeroLength = struct(...
            'PolygonPathEmpty',PolygonPath(), ...
            'PolygonPathZeroLength',PolygonPath(1,2,3,4), ...
            'SplinePathEmpty',SplinePath(), ...
            'SplinePathZeroLength',SplinePath([0 0], cat(3, [1;2], [0;0])), ...
            'DubinsPathEmpty',DubinsPath())
        
        PathObj = struct(...
            'PolygonPathEmpty',PolygonPath(), ...
            'PolygonPathZeroLength',PolygonPath(1, 1, 0, 0), ...
            'PolygonPathNonEmpty',PolygonPath.xy2Path(0:10, zeros(1,11)), ...
            'SplinePathEmpty',SplinePath(), ...
            'SplinePathZeroLength',SplinePath([0 0], reshape([1 0; 0 0], [2 1 2])), ...
            'SplinePathNonEmpty',SplinePath([0 1 2], reshape([1 0; 0 0; 1 1; 1 0], [2 2 2])), ...
            'DubinsPathEmpty',DubinsPath(), ...
            'DubinsPathZeroLength',DubinsPath([0 0 0], 0, 0, 2), ...
            'DubinsPathNonEmpty',DubinsPath([0 0 0], [0 1 -1], [2 1 1], 2))
        
        s = struct(...
            'emptyS',[], ...
            'emptyColS',zeros(0,1), ...
            'emptyRowS',zeros(1,0), ...
            'scalarS',1.1, ...
            'vectorS',linspace(-1,10,24), ...
            'ndS',ones(10,2,3))
    end
    
    
    
    methods (Test)
        function testReturnSize(testCase, PathObj, s)
        % The size of the return arguments must match the size of S.
        
            [tau,idx] = PathObj.s2tau(s);
            verifySize(testCase, tau, size(s));
            verifySize(testCase, idx, size(s));
            verifyClass(testCase, idx, 'uint32');
        end%fcn
        
        function testReturnValuesEmptyPath(testCase, PathZeroLength, s)
        % For empty or zero-length paths, S2TAU returns NaN for tau and
        % 0 for idx.
        
            [tau,idx] = PathZeroLength.s2tau(s);
            verifyEqual(testCase, tau, nan(size(s)));
            verifyEqual(testCase, idx, zeros(size(s), 'uint32'));
        end%fcn
    end
    
end%class
